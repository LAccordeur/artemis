<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kuo.artemis.server.dao.UserProjectMapper">
  <resultMap id="BaseResultMap" type="com.kuo.artemis.server.entity.UserProject">
    <result column="project_id" jdbcType="INTEGER" property="projectId" />
    <result column="project_name" jdbcType="VARCHAR" property="projectName" />
    <result column="project_admin_id" jdbcType="INTEGER" property="projectAdminId" />
    <result column="project_admin_name" jdbcType="VARCHAR" property="projectAdminName" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>



  <insert id="insertUserProjectByCreate">
    insert into user_project(user_id, project_id, status, join_type)
    values (#{userId}, #{projectId}, 2, 0)
  </insert>

  <select id="selectProjectsByUserId" resultType="UserProject">
    select project_name, project_id, project_admin_id, project_admin_name, create_time
    from user_project_view
    where user_id = #{userId}
  </select>

  <select id="selectStatusByPrimaryKey" resultType="Integer">
    select status
    from user_project
    where user_id = #{userId} and project_id = #{projectId}
  </select>
  
  <select id="selectByPrimaryKey" resultType="UserProject">
    select user_id, project_id, status
    from user_project
    where user_id = #{userId} and project_id = #{projectId}
  </select>

  <select id="selectMembersByProjectId" resultType="UserProject">
    select user_name, user_id, project_id, role_id, role_name
    from user_project_view
    where project_id = #{projectId}
  </select>

  <select id="selectMemberByProjectIdAndUserId" parameterType="UserProjectKey" resultType="UserProject" >
    select user_name, user_id, project_id, role_id, role_name
    from user_project_view
    where user_id = #{userId} and project_id = #{projectId}
  </select>

  <select id="selectRoleId" resultType="Integer">
    select role_id
    from user_project_view
    where project_id = #{projectId} and user_id = #{userId}
  </select>

  <select id="selectAdminProject" resultType="UserProject" >
    select project_name, project_id, project_admin_id, project_admin_name, create_time
    from user_project_view
    where user_id = #{userId} and project_admin_id = #{userId}
  </select>


  <update id="updateUserProjectStatusByDelete">
    update user_project set status = 4 where user_id = #{userId} and project_id = #{projectId}
  </update>

  <delete id="deleteUserProject">
    delete from user_project where  user_id = #{userId} and project_id = #{projectId}
  </delete>


  <insert id="insert" parameterType="com.kuo.artemis.server.entity.UserProject">
    insert into user_project_view (project_id, project_name, project_admin_id, 
      project_admin_name, user_id, user_name, 
      role_id, role_name, create_time
      )
    values (#{projectId,jdbcType=INTEGER}, #{projectName,jdbcType=VARCHAR}, #{projectAdminId,jdbcType=INTEGER}, 
      #{projectAdminName,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, 
      #{roleId,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.kuo.artemis.server.entity.UserProject">
    insert into user_project_view
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="projectId != null">
        project_id,
      </if>
      <if test="projectName != null">
        project_name,
      </if>
      <if test="projectAdminId != null">
        project_admin_id,
      </if>
      <if test="projectAdminName != null">
        project_admin_name,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="projectId != null">
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="projectName != null">
        #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="projectAdminId != null">
        #{projectAdminId,jdbcType=INTEGER},
      </if>
      <if test="projectAdminName != null">
        #{projectAdminName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
</mapper>